// <auto-generated />
using System;
using LogAnalizerServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogAnalizerServer.Migrations
{
    [DbContext(typeof(LogAnalizerServerDbContext))]
    [Migration("20250402200416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("LogAnalizerServer.Models.AlarmLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlarmClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlarmId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlarmMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("FinalState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GenerationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GenerationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalZoneTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogAction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LoggedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PrevState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("SequenceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeWhenLogged")
                        .HasColumnType("TEXT");

                    b.Property<int>("WeekType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AlarmLogs");
                });

            modelBuilder.Entity("LogAnalizerServer.Models.ComparisonResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlarmMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("CountWeek1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountWeek2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Week1Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Week2Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ComparisonResults");
                });
#pragma warning restore 612, 618
        }
    }
}
